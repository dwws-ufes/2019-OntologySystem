package br.ufes.informatica.rationalontology.core.persistence;

import java.util.List;
import java.util.Set;

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Path;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import br.ufes.inf.nemo.jbutler.ejb.application.filters.Filter;
import br.ufes.inf.nemo.jbutler.ejb.persistence.BaseJPADAO;
import br.ufes.informatica.rationalontology.core.domain.Access;
import br.ufes.informatica.rationalontology.core.domain.Access_;
import br.ufes.informatica.rationalontology.core.domain.User;
import br.ufes.informatica.rationalontology.core.domain.User_;

/** TODO: generated by FrameWeb. Should be documented. */
@Stateless
public class AccessJPADAO extends BaseJPADAO<Access> implements AccessDAO{
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
    @PersistenceContext
    private EntityManager entityManager;

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	protected EntityManager getEntityManager() {
		return entityManager;
	}
    
    
	/** TODO: generated by FrameWeb. Should be documented. */
    @Override
	public List getRequests(long id) {
		// Constructs the query over the User class.
		CriteriaBuilder cb = entityManager.getCriteriaBuilder();
		CriteriaQuery<Access> cq = cb.createQuery(Access.class);		
		Root<Access> root = cq.from(Access.class);

		cq.where(cb.equal(root.get(Access_.Source), id));
		TypedQuery q = entityManager.createQuery(cq);
		return q.getResultList();
	}
	
	/** TODO: generated by FrameWeb. Should be documented. */
    @Override
	public String requestParticipation(String ontoName, String email) {
		// FIXME: auto-generated method stub
		return null;
	}
	

}