package br.ufes.informatica.rationalontology.core.application;

import java.util.List;

import javax.annotation.security.PermitAll;
import javax.ejb.EJB;
import javax.ejb.Stateless;

import br.ufes.inf.nemo.jbutler.ejb.application.CrudServiceBean;
import br.ufes.inf.nemo.jbutler.ejb.persistence.BaseDAO;
import br.ufes.informatica.rationalontology.core.domain.User;
import br.ufes.informatica.rationalontology.core.persistence.UserDAO;

/** TODO: generated by FrameWeb. Should be documented. */
@Stateless
public class RegistrationServiceAppBean extends CrudServiceBean<User> implements RegistrationServiceApp {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private UserDAO userDAO;

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public void getAccess(String email) {
		// FIXME: auto-generated method stub
		return;
	}
	
	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	@PermitAll()
	public String getAccess() {
		System.out.println("RegistrationServiceBean -> ");
		BaseDAO user = getDAO();
				
		List list = user.retrieveAll();
		
		if(list.isEmpty()) {
			return "Usuário ou senha inválida!";
		}
		return null;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public void register(User user) {
		// FIXME: auto-generated method stub
		return;
	}

	@Override
	public BaseDAO<User> getDAO() {
		return userDAO;
	}

}