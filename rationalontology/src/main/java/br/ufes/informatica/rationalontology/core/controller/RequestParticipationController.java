package br.ufes.informatica.rationalontology.core.controller;

import java.io.Serializable;
import java.util.List;

import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.faces.application.FacesMessage;
import javax.inject.Named;

import br.ufes.inf.nemo.jbutler.ejb.controller.JSFController;
import br.ufes.informatica.rationalontology.TypeOfAccess;
import br.ufes.informatica.rationalontology.core.application.RequestParticipationApp;
import br.ufes.informatica.rationalontology.core.application.login.SessionInformation;
import br.ufes.informatica.rationalontology.core.domain.Access;
import br.ufes.informatica.rationalontology.core.domain.Ontology;
import br.ufes.informatica.rationalontology.core.exception.RegistrationFailedException;

/** TODO: generated by FrameWeb. Should be documented. */
@Named @SessionScoped
public class RequestParticipationController extends JSFController implements Serializable{
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private RequestParticipationApp requestParticipationApp;
	
	//****************************************************************************
	//********** Variáveis responsáveis por EXIBIR as requisições de participação
	//********* Utilizadas na interface requestParticipatinPage
	//****************************************************************************
	private List<Access> requests;
	
	private Access selectedRequest;
	
	//********************************************************************
	//*** Variáveis responsáveis por CADASTRAR uma nova requisição
	//*** Utilizadas na interface newRequestParticipationPage
	//********************************************************************
	private List<Ontology> ontologies;

	private String ontologyName;
	
	private Ontology selectedOntology;
	
	private String email_text;
	
    
    //***********************************************************************
    //**  Métodos de acesso as variáveis da página RequstPartipationPage  ***
    //************************************************************************
	public void setRequests(List<Access> requests) {
		this.requests = requests;
	}
	
	public List<Access> getRequests() {
		return requests;
	}

	public Access getSelectedRequest() {
		return selectedRequest;
	}

	public void setSelectedRequest(Access selectedRequest) {
		this.selectedRequest = selectedRequest;
	}
	
	//**************************************************************************
    //**  Métodos de acesso as variáveis da página NewRequstPartipationPage  ***
    //***************************************************************************
	
	public List<Ontology> getOntologies() {
		return ontologies;
	}

	public void setOntologies(List<Ontology> ontologies) {
		this.ontologies = ontologies;
	}
	
	public String getOntologyName() {
		return ontologyName;
	}

	public void setOntologyName(String ontologyName) {
		this.ontologyName = ontologyName;
	}
	
	public Ontology getSelectedOntology() {
		return selectedOntology;
	}

	public void setSelectedOntology(Ontology selectedOntology) {
		this.selectedOntology = selectedOntology;
	}
	
	public String getEmail_text() {
		return email_text;
	}

	public void setEmail_text(String email_text) {
		this.email_text = email_text;
	}
	
	//**********************
    //**  Métodos gerais ***
    //**********************
	public void onLoadForm() {
		setRequests();
	}
	
	private void setRequests() {
		requests = requestParticipationApp.getRequests();
	}
	
	public String newParticipation() {
		ontologies = null;
		ontologyName = "";
		email_text = "";
		return "/core/requestParticipation/newRquestParticipationPage.xhtml?faces-redirect=true";
	}


	public void cancelParticipation() {
		if(selectedRequest == null) {
			addGlobalI18nMessage("msgs", FacesMessage.SEVERITY_ERROR, "requestParticipation.notSelectedAccess");
			return;
		}
		
		try {
			selectedRequest.setAccessType( TypeOfAccess.CANCELADO );
			requestParticipationApp.cancellParticipation(selectedRequest);
			addGlobalI18nMessage("msgs", FacesMessage.SEVERITY_INFO, "jbutler.message.successUpdate");
		}
		catch (RegistrationFailedException e) {
			addGlobalI18nMessage("msgs", FacesMessage.SEVERITY_FATAL, "requestParticipation.error.summary", "requestParticipation.error.detail");
		}
	}
	
	public void findOntologyByName() {
		setOntologies( requestParticipationApp.findOntologyByNameNotMine(ontologyName));
	}
	
	public String save() {		
		if(selectedOntology == null) {
			addGlobalI18nMessage("msgs", FacesMessage.SEVERITY_ERROR, "requestParticipation.notSelectedOntology");
			return "core/requestParticipation/newRquestParticipationPage.xhtml?faces-redirect=true";
		}
		
		Access newAccess = new Access();
		newAccess.setAccessType(TypeOfAccess.SOLICITANTE);
		newAccess.setEmail_text(email_text);
		newAccess.setSource(SessionInformation.getInstance().getUsuarioLogado());
		newAccess.setTarget(selectedOntology);
		
		try {
			requestParticipationApp.saveNewParticipation(newAccess);
			setRequests();
			addGlobalI18nMessage("msgs", FacesMessage.SEVERITY_INFO, "jbutler.message.successInsert");
		} catch (RegistrationFailedException e) {
			addGlobalI18nMessage("msgs", FacesMessage.SEVERITY_FATAL, "requestParticipation.error.summary", "requestParticipation.error.detail");
		}		
		
		return "/core/requestParticipation/requestParticipationPage.xhtml?faces-redirect=true";
	}
	
	public void checkAuthorization() {
		requestParticipationApp.checkAuthorization();
	}

}