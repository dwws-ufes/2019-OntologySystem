package br.ufes.informatica.rationalontology.core.application;

import java.util.List;

import javax.annotation.security.RolesAllowed;
import javax.ejb.EJB;
import javax.ejb.Stateless;

import br.ufes.informatica.rationalontology.TypeOfAccess;
import br.ufes.informatica.rationalontology.core.domain.Access;
import br.ufes.informatica.rationalontology.core.domain.Ontology;
import br.ufes.informatica.rationalontology.core.domain.User;
import br.ufes.informatica.rationalontology.core.persistence.AccessDAO;
import br.ufes.informatica.rationalontology.core.persistence.OntologyDAO;

/** TODO: generated by FrameWeb. Should be documented. */
@Stateless
@RolesAllowed("SysAdmin")
public class OntologyManagementAppBean implements OntologyManagementApp {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private OntologyDAO ontologyDAO;
	
	@EJB
	private AccessDAO accessDAO;

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public List<Ontology> getOntologiesByUser(User user) {
		return ontologyDAO.getOntologiesByUser(user);
	}

	@Override
	public void saveNewOntology(Ontology ontology, User user) {
		Access newAccess = new Access();
		newAccess.setAccessType(TypeOfAccess.CRIADOR);
		newAccess.setSource(user);
		newAccess.setTarget(ontology);
		
		ontologyDAO.save(ontology);
		accessDAO.save(newAccess);
	}
	
	@Override
	public void saveOntology(Ontology ontology, User user) {
		ontologyDAO.save(ontology);
	}

	@Override
	public void checkAuthorization() {
		System.out.println("checkAuthorization");
	}

	@Override
	public void deleteOntology(Ontology ontology) {
		ontologyDAO.deleteOntology(ontology);
	}


}