package br.ufes.informatica.rationalontology.core.controller;

import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.enterprise.inject.*;
import javax.faces.context.FacesContext;
import javax.inject.Named;

import br.ufes.inf.nemo.jbutler.ejb.controller.JSFController;
import br.ufes.informatica.rationalontology.core.application.RegistrationServiceApp;
import br.ufes.informatica.rationalontology.core.domain.User;

/** TODO: generated by FrameWeb. Should be documented. */
@Named(value="registrationController")
@SessionScoped
@Model
public class RegistrationController extends JSFController {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	
	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private RegistrationServiceApp registrationServiceApp;
	

	
	/** TODO: generated by FrameWeb. Should be documented. */
	private User user;
	
	/** TODO: generated by FrameWeb. Should be documented. */
	private String email;
	private String password;
	private String repeatPassword;
	

	
	/** TODO: generated by FrameWeb. Should be documented. */
	public String getAccess() {
		// FIXME: auto-generated method stub
		if (user == null) {
			System.out.println("XXXXXXXXXXXXXXXXX");
			System.out.println(email);
			System.out.println(password);
		}
		else {
			System.out.println(user.getEmail());
			System.out.println(user.getPassword());
		}
		
		return null;
	}
	
	public String Logout(){
		 
		FacesContext.getCurrentInstance().getExternalContext().invalidateSession();
 
		return "/index.xhtml?faces-redirect=true";
	}
	
	public User GetUsuarioSession(){
		 
		FacesContext facesContext = FacesContext.getCurrentInstance();
 
		//return (UsuarioModel)facesContext.getExternalContext().getSessionMap().get("usuarioAutenticado");
		return null;
	}
	
	/** TODO: generated by FrameWeb. Should be documented. */
	public String register() {
		// FIXME: auto-generated method stub
		return null;
	}
	
	
	
	/** Getter for user. */
	public User getUser() {
		return user;
	}

	/** Setter for user. */
	public void setUser(User user) {
		this.user = user;
	}
	
	/** Getter for repeatPassword. */
	public String getRepeatPassword() {
		return repeatPassword;
	}

	/** Setter for repeatPassword. */
	public void setRepeatPassword(String repeatPassword) {
		this.repeatPassword = repeatPassword;
	}
	
	public String getPassword() {
		return password;
	}

	/** Setter for repeatPassword. */
	public void setPassword(String password) {
		this.password = password;
	}
	
	public String getEmail() {
		return email;
	}

	/** Setter for repeatPassword. */
	public void setEmail(String email) {
		this.email = email;
	}
	
}