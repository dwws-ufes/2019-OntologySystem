package br.ufes.informatica.rationalontology.core.controller;

import java.util.logging.Level;

import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.faces.application.FacesMessage;
import javax.inject.Named;

import br.ufes.inf.nemo.jbutler.ejb.application.CrudService;
import br.ufes.inf.nemo.jbutler.ejb.controller.CrudController;
import br.ufes.informatica.rationalontology.core.application.RegistrationServiceApp;
import br.ufes.informatica.rationalontology.core.domain.User;

/** TODO: generated by FrameWeb. Should be documented. */
@Named @SessionScoped
public class RegistrationController extends CrudController<User> {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	private String repeatPassword;
	
	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private RegistrationServiceApp registrationServiceApp;	
	
	
	public void ajaxCheckPasswords() {
		checkPasswords();
	}

	/**
	 * Checks if the contents of the password fields match.
	 * 
	 * @return <code>true</code> if the passwords match, <code>false</code> otherwise.
	 */
	private boolean checkPasswords() {
		if (((repeatPassword != null) && (!repeatPassword.equals( selectedEntity.getPassword()))) || ((repeatPassword == null) && (selectedEntity.getPassword() != null))) {
			addGlobalI18nMessage("msgs", FacesMessage.SEVERITY_WARN, "registration.passwordsDontMatch.summary", "registration.passwordsDontMatch.detail");
			return false;
		}
		return true;
	}
	

	public String getRepeatPassword() {
		return repeatPassword;
	}

	public void setRepeatPassword(String repeatPassword) {
		this.repeatPassword = repeatPassword;
	}

	@Override
	protected CrudService<User> getCrudService() {
		// TODO Auto-generated method stub
		return registrationServiceApp;
	}

	@Override
	protected void initFilters() {
		// TODO Auto-generated method stub
		
	}
	
}